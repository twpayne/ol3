/**
 * @typedef {Object} ol.AttributionOptions
 * @property {string} html HTML markup for this attribution.
 * @property {Object.<string, Array.<ol.TileRange>>|undefined} tileRanges
 *     Tile ranges (FOR INTERNAL USE ONLY).
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.DeviceOrientationOptions
 * @property {boolean|undefined} tracking Start tracking. Default is `false`.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.GeolocationOptions
 * @property {boolean|undefined} tracking Start Tracking. Default is `false`.
 * @property {GeolocationPositionOptions|undefined} trackingOptions Tracking options.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @todo stability experimental
 */

/**
 * Object literal with config options for the map.
 * @typedef {Object} ol.MapOptions
 * @property {ol.Collection|Array.<ol.control.Control>|undefined} controls
 *     Controls initially added to the map.
 * @property {ol.Collection|Array.<ol.interaction.Interaction>|undefined} interactions
 *     Interactions that are initially added to the map.
 * @property {Array.<ol.layer.Base>|ol.Collection|undefined} layers Layers.
 * @property {ol.Collection|Array.<ol.Overlay>|undefined} overlays
 *     Overlays initially added to the map.
 * @property {ol.RendererHint|undefined} renderer Renderer.
 * @property {Array.<ol.RendererHint>|undefined} renderers Renderers.
 * @property {Element|string|undefined} target The container for the map.
 * @property {ol.IView|undefined} view The map's view. Currently
 *     {@link ol.View2D} is available as view.
 * @todo stability experimental
 */

/**
 * Object literal with config options for the overlay.
 * @typedef {Object} ol.OverlayOptions
 * @property {Element|undefined} element The overlay element.
 * @property {ol.Coordinate|undefined} position The overlay position in map
 *     projection.
 * @property {ol.OverlayPositioning|undefined} positioning Positioning.
 * @property {boolean|undefined} stopEvent Whether event propagation to the map
 *     viewport should be stopped. Default is `true`. If `true` the overlay is
 *     placed in the same container as that of the controls
 *     (`ol-overlaycontainer-stopevent`).
 * @property {boolean|undefined} insertFirst Whether the overlay is inserted
 *     first in the overlay container, or appended. Default is `true`. If the
 *     overlay is placed in the same container as that of the controls (see
 *     the `stopEvent` option) you will probably set `insertFirst` to `true`
 *     so the overlay is displayed below the controls.
 * @todo stability experimental
 */

/**
 * Object literal with config options for the Proj4js projection.
 * @typedef {Object} ol.Proj4jsProjectionOptions
 * @property {string} code The SRS identifier code, e.g. `EPSG:31256`.
 * @property {ol.Extent|undefined} extent The validity extent for the SRS.
 * @property {boolean|undefined} global Whether the projection is valid for the
 *     whole globe. Default is `false`.
 * @todo stability experimental
 */

/**
 * Object literal with config options for the projection.
 * @typedef {Object} ol.ProjectionOptions
 * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.
 * @property {ol.proj.Units} units Units.
 * @property {ol.Extent|undefined} extent The validity extent for the SRS.
 * @property {string|undefined} axisOrientation The axis orientation as
 *     specified in Proj4. The default is `enu`.
 * @property {boolean|undefined} global Whether the projection is valid for the
 *     whole globe. Default is `false`.
 * @todo stability experimental
 */

/**
 * Object literal with config options for the view.
 * @typedef {Object} ol.View2DOptions
 * @property {ol.Coordinate|undefined} center The initial center for the view.
 *     The coordinate system for the center is specified with the `projection`
 *     option. Default is `undefined`, and layer sources will not be fetched if
 *       this is not set.
 * @property {ol.Extent|undefined} extent The extent that constrains the center,
 *     in other words, center cannot be set outside this extent.
 *     Default is `undefined`.
 * @property {number|undefined} maxResolution The maximum resolution used to
 *     determine the resolution constraint. It is used together with `maxZoom`
 *     and `zoomFactor`. If unspecified it is calculated in such a way that the
 *     projection's validity extent fits in a 256x256 px tile. If the projection
 *     is Spherical Mercator (the default) then `maxResolution` defaults to
 *     `40075016.68557849 / 256 = 156543.03392804097`.
 * @property {number|undefined} maxZoom The maximum zoom level used to determine
 *     the resolution constraint. It is used together with `maxResolution` and
 *     `zoomFactor`. Default is `28`.
 * @property {ol.proj.ProjectionLike} projection The projection. Default is
 *     `EPSG:3857` (Spherical Mercator).
 * @property {number|undefined} resolution The initial resolution for the view.
 *     The units are `projection` units per pixel (e.g. meters per pixel).
 *     An alternative to setting this is to set `zoom`. Default is `undefined`,
 *     and layer sources will not be fetched if neither this nor `zoom` are
 *     defined.
 * @property {Array.<number>|undefined} resolutions Resolutions to determine the
 *     resolution constraint. If set the `maxResolution`, `maxZoom` and
 *     `zoomFactor` options are ignored.
 * @property {number|undefined} rotation The initial rotation for the view
 *     in radians (positive rotation clockwise). Default is `0`.
 * @property {number|undefined} zoom Only used if `resolution` is not defined.
 *     Zoom level used to calculate the initial resolution for the view.
 *     The initial resolution is determined using the
 *     `ol.View2D#constrainResolution` method.
 * @property {number|undefined} zoomFactor The zoom factor used to determine the
 *     resolution constraint. Used together with `maxResolution` and `maxZoom`.
 *     Default is `2`.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.animation.BounceOptions
 * @property {number} resolution The resolution to start the bounce from, typically `map.getView().getResolution()`.
 * @property {number|undefined} start The start time of the animation. Default is immediately.
 * @property {number|undefined} duration The duration of the animation in milliseconds. Default is `1000`.
 * @property {function(number):number|undefined} easing The easing function to use.  Default is `ol.easing.upAndDown`
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.animation.PanOptions
 * @property {ol.Coordinate} source The location to start panning from, typically `map.getView().getCenter()`.
 * @property {number|undefined} start The start time of the animation. Default is immediately.
 * @property {number|undefined} duration The duration of the animation in milliseconds. Default is `1000`.
 * @property {function(number):number|undefined} easing The easing function to use.  Default is `ol.easing.inAndOut`
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.animation.RotateOptions
 * @property {number} rotation The rotation to apply, in radians.
 * @property {number|undefined} start The start time of the animation. Default is immediately.
 * @property {number|undefined} duration The duration of the animation in milliseconds.  Default is `1000`.
 * @property {function(number):number|undefined} easing The easing function to use.  Default is `ol.easing.inAndOut`
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.animation.ZoomOptions
 * @property {number} resolution number The resolution to begin zooming from, typically `map.getView().getResolution()`.
 * @property {number|undefined} start The start time of the animation. Default is immediately.
 * @property {number|undefined} duration The duration of the animation in milliseconds. Default is `1000`.
 * @property {function(number):number|undefined} easing Easing function.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.AttributionOptions
 * @property {string|undefined} className CSS class name. Default is `ol-attribution`.
 * @property {Element|undefined} target Target.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.ControlOptions
 * @property {Element|undefined} element Element.
 * @property {Element|undefined} target Target.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.DefaultsOptions
 * @property {boolean|undefined} attribution Attribution.
 * @property {ol.control.AttributionOptions|undefined} attributionOptions
 *     Attribution options.
 * @property {boolean|undefined} logo Logo.
 * @property {ol.control.LogoOptions|undefined} logoOptions Logo options.
 * @property {boolean|undefined} zoom Zoom.
 * @property {ol.control.ZoomOptions|undefined} zoomOptions Zoom options.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.FullScreenOptions
 * @property {string|undefined} className CSS class name. Default is `ol-full-screen`.
 * @property {boolean|undefined} keys Full keyboard access.
 * @property {Element|undefined} target Target.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.LogoOptions
 * @property {string|undefined} className CSS class name. Default is `ol-logo`.
 * @property {Element|undefined} target Target.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.MousePositionOptions
 * @property {string|undefined} className CSS class name. Default is `ol-mouse-position`.
 * @property {ol.CoordinateFormatType|undefined} coordinateFormat Coordinate
 *     format.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {Element|undefined} target Target.
 * @property {string|undefined} undefinedHTML Markup for undefined coordinates.
 *     Default is `` (empty string).
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.ScaleLineOptions
 * @property {string|undefined} className CSS Class name. Default is `ol-scale-line`.
 * @property {number|undefined} minWidth Minimum width in pixels.
 * @property {Element|undefined} target Target.
 * @property {ol.control.ScaleLineUnits|undefined} units Units.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.ZoomOptions
 * @property {number|undefined} duration Animation duration in milliseconds. Default is `250`.
 * @property {string|undefined} className CSS class name. Default is `ol-zoom`.
 * @property {number|undefined} delta The zoom delta applied on each click.
 * @property {Element|undefined} target Target.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.ZoomSliderOptions
 * @property {string|undefined} className CSS class name.
 * @property {number|undefined} maxResolution Maximum resolution.
 * @property {number|undefined} minResolution Minimum resolution.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.control.ZoomToExtentOptions
 * @property {string|undefined} className Class name. Default is `ol-zoom-extent`.
 * @property {Element|undefined} target Target.
 * @property {ol.Extent|undefined} extent The extent to zoom to. If
 *     undefined the validity extent of the view projection is used.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.DoubleClickZoomOptions
 * @property {number|undefined} duration Animation duration in milliseconds. Default is `250`.
 * @property {number|undefined} delta The zoom delta applied on each double
 *     click, default is `1`.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.DragPanOptions
 * @property {ol.Kinetic|undefined} kinetic Kinetic inertia to apply to the pan.
 * @property {ol.events.ConditionType|undefined} condition A conditional
 *     modifier (i.e. Shift key) that determines if the interaction is active
 *     or not, default is no modifiers.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.DragRotateOptions
 * @property {ol.events.ConditionType|undefined} condition A conditional
 *     modifier (i.e. Shift key) that determines if the interaction is active
 *     or not, default is both shift and alt keys.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.DragRotateAndZoomOptions
 * @property {ol.events.ConditionType|undefined} condition A conditional
 *     modifier (i.e. Shift key) that determines if the interaction is active
 *     or not, default is shify key.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.DragZoomOptions
 * @property {ol.events.ConditionType|undefined} condition A conditional
 *     modifier (i.e. Shift key) that determines if the interaction is active
 *     or not, default is shift key.
 * @todo stability experimental
 */

/**
 * Interactions for the map. Default is `true` for all options.
 * @typedef {Object} ol.interaction.DefaultsOptions
 * @property {boolean|undefined} altShiftDragRotate Whether Alt-Shift-drag
 *     rotate is desired.
 * @property {boolean|undefined} doubleClickZoom Whether double click zoom is
 *     desired.
 * @property {boolean|undefined} dragPan Whether drag-pan is desired.
 * @property {boolean|undefined} keyboard Whether keyboard interaction is
 *     desired.
 * @property {boolean|undefined} mouseWheelZoom Whether mousewheel zoom is
 *     desired.
 * @property {boolean|undefined} shiftDragZoom Whether Shift-drag zoom is
 *     desired.
 * @property {boolean|undefined} touchPan Whether touch pan is
 *     desired.
 * @property {boolean|undefined} touchRotate Whether touch rotate is desired.
 * @property {boolean|undefined} touchZoom Whether touch zoom is desired.
 * @property {number|undefined} zoomDelta Zoom delta.
 * @property {number|undefined} zoomDuration Zoom duration.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.KeyboardPanOptions
 * @property {ol.events.ConditionType|undefined} condition A conditional
 *     modifier (i.e. Shift key) that determines if the interaction is active
 *     or not, default is no modifiers.
 * @property {number|undefined} pixelDelta Pixel The amount to pan on each key
 *     press
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.KeyboardZoomOptions
 * @property {number|undefined} duration Animation duration in milliseconds. Default is `100`.
 * @property {ol.events.ConditionType|undefined} condition A conditional
 *     modifier (i.e. Shift key) that determines if the interaction is active
 *     or not, default is no modifiers.
 * @property {number|undefined} delta The amount to zoom on each key press.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.MouseWheelZoomOptions
 * @property {number|undefined} duration Animation duration in milliseconds. Default is `250`.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.TouchPanOptions
 * @property {ol.Kinetic|undefined} kinetic Kinetic inertia to apply to the
 *     pan.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.TouchRotateOptions
 * @property {number|undefined} threshold Minimal angle to start a rotation.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.interaction.TouchZoomOptions
 * @property {number|undefined} duration Animation duration in milliseconds. Default is `400`.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.layer.BaseOptions
 * @property {number|undefined} brightness Brightness.
 * @property {number|undefined} contrast Contrast.
 * @property {number|undefined} hue Hue.
 * @property {number|undefined} opacity Opacity.
 * @property {number|undefined} saturation Saturation.
 * @property {boolean|undefined} visible Visibility.
 * @property {number|undefined} minResolution The minimum resolution
 *      (inclusive) at which this layer will be visible.
 * @property {number|undefined} maxResolution The maximum resolution
 *      (exclusive) below which this layer will be visible.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.layer.LayerOptions
 * @property {number|undefined} brightness Brightness.
 * @property {number|undefined} contrast Contrast.
 * @property {number|undefined} hue Hue.
 * @property {number|undefined} opacity Opacity. 0-1. Default is `1`.
 * @property {number|undefined} saturation Saturation.
 * @property {ol.source.Source} source Source for this layer.
 * @property {boolean|undefined} visible Visibility. Default is `true` (visible).
 * @property {number|undefined} minResolution The minimum resolution
 *      (inclusive) at which this layer will be visible.
 * @property {number|undefined} maxResolution The maximum resolution
 *      (exclusive) below which this layer will be visible.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.layer.GroupOptions
 * @property {number|undefined} brightness Brightness.
 * @property {number|undefined} contrast Contrast.
 * @property {number|undefined} hue Hue.
 * @property {number|undefined} opacity Opacity.
 * @property {number|undefined} saturation Saturation.
 * @property {boolean|undefined} visible Visibility.
 * @property {number|undefined} minResolution The minimum resolution
 *      (inclusive) at which this layer will be visible.
 * @property {number|undefined} maxResolution The maximum resolution
 *      (exclusive) below which this layer will be visible.
 * @property {Array.<ol.layer.Base>|ol.Collection|undefined} layers Child layers.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.layer.TileOptions
 * @property {number|undefined} brightness Brightness.
 * @property {number|undefined} contrast Contrast.
 * @property {number|undefined} hue Hue.
 * @property {number|undefined} opacity Opacity. 0-1. Default is `1`.
 * @property {number|undefined} preload Preload.
 * @property {number|undefined} saturation Saturation.
 * @property {ol.source.Source} source Source for this layer.
 * @property {boolean|undefined} visible Visibility. Default is `true` (visible).
 * @property {number|undefined} minResolution The minimum resolution
 *      (inclusive) at which this layer will be visible.
 * @property {number|undefined} maxResolution The maximum resolution
 *      (exclusive) below which this layer will be visible.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.layer.VectorOptions
 * @property {number|undefined} brightness Brightness.
 * @property {number|undefined} contrast Contrast.
 * @property {number|undefined} hue Hue.
 * @property {number|undefined} minResolution The minimum resolution
 *      (inclusive) at which this layer will be visible.
 * @property {number|undefined} maxResolution The maximum resolution
 *      (exclusive) below which this layer will be visible.
 * @property {number|undefined} opacity Opacity. 0-1. Default is `1`.
 * @property {number|undefined} saturation Saturation.
 * @property {ol.source.Vector} source Source.
 * @property {ol.style.StyleFunction|undefined} styleFunction Style function.
 * @property {boolean|undefined} visible Visibility. Default is `true` (visible).
 */

/**
 * @typedef {Object} ol.source.BingMapsOptions
 * @property {string|undefined} culture Culture.
 * @property {string} key Bing Maps API key. Get yours at
 *     http://bingmapsportal.com/.
 * @property {string} style Style.
 * @property {ol.TileLoadFunctionType|undefined} tileLoadFunction Optional
 *     function to load a tile given a URL.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.GeoJSONOptions
 * @property {Array.<ol.Attribution>|undefined} attributions Attributions.
 * @property {string|undefined} logo Logo.
 * @property {GeoJSONObject|undefined} geoJSON Object.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {string|undefined} string String.
 * @proprtty {string|undefined} url URL.
 */

/**
 * @typedef {Object} ol.source.MapQuestOptions
 * @property {ol.TileLoadFunctionType|undefined} tileLoadFunction Optional
 *     function to load a tile given a URL.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.TileDebugOptions
 * @property {ol.Extent|undefined} extent Extent.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {ol.tilegrid.TileGrid|undefined} tileGrid Tile grid.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.OSMOptions
 * @property {Array.<ol.Attribution>|undefined} attributions Attributions.
 * @property {number|undefined} maxZoom Max zoom.
 * @property {ol.TileLoadFunctionType|undefined} tileLoadFunction Optional
 *     function to load a tile given a URL.
 * @property {string|undefined} url URL.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.ImageWMSOptions
 * @property {Array.<ol.Attribution>|undefined} attributions Attributions.
 * @property {null|string|undefined} crossOrigin crossOrigin setting for image
 *     requests.
 * @property {ol.Extent|undefined} extent Extent.
 * @property {Object.<string,*>} params WMS request parameters. At least a
 *     `LAYERS` param is required. `STYLES` is `` by default. `VERSION` is
 *     `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX` and `CRS` (`SRS` for WMS
 *     version < 1.3.0) will be set dynamically.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {number|undefined} ratio Ratio. 1 means image requests are the size
 *     of the map viewport, 2 means twice the size of the map viewport, and so
 *     on.
 * @property {Array.<number>|undefined} resolutions Resolutions. If specified,
 *     requests will be made for these resolutions only.
 * @property {string|undefined} url WMS service URL.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.StamenOptions
 * @property {string} layer Layer.
 * @property {number|undefined} minZoom Minimum zoom.
 * @property {number|undefined} maxZoom Maximum zoom.
 * @property {boolean|undefined} opaque Whether the layer is opaque.
 * @property {ol.TileLoadFunctionType|undefined} tileLoadFunction Optional
 *     function to load a tile given a URL.
 * @property {string|undefined} url URL.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.ImageStaticOptions
 * @property {Array.<ol.Attribution>|undefined} attributions Attributions.
 * @property {null|string|undefined} crossOrigin crossOrigin setting for image
 *     requests.
 * @property {ol.Extent|undefined} extent Extent.
 * @property {ol.Extent|undefined} imageExtent Extent of the image.
 * @property {ol.Size|undefined} imageSize Size of the image.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {string|undefined} url URL.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.TileJSONOptions
 * @property {null|string|undefined} crossOrigin crossOrigin setting for image
 *     requests.
 * @property {ol.TileLoadFunctionType|undefined} tileLoadFunction Optional
 *     function to load a tile given a URL.
 * @property {string} url URL.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.TileWMSOptions
 * @property {Array.<ol.Attribution>|undefined} attributions Attributions.
 * @property {Object.<string,*>} params WMS request parameters. At least a
 *     `LAYERS` param is required. `STYLES` is `` by default. `VERSION` is
 *     `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX` and `CRS` (`SRS` for WMS
 *     version < 1.3.0) will be set dynamically.
 * @property {null|string|undefined} crossOrigin crossOrigin setting for image
 *     requests.
 * @property {ol.Extent|undefined} extent Extent.
 * @property {string|undefined} logo Logo.
 * @property {ol.tilegrid.TileGrid|undefined} tileGrid Tile grid.
 * @property {number|undefined} maxZoom Maximum zoom.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {ol.TileLoadFunctionType|undefined} tileLoadFunction Optional
 *     function to load a tile given a URL.
 * @property {string|undefined} url WMS service URL.
 * @property {Array.<string>|undefined} urls WMS service urls. Use this instead
 *     of `url` when the WMS supports multiple urls for GetMap requests.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.VectorOptions
 * @property {Array.<ol.Attribution>|undefined} attributions Attributions.
 * @property {ol.Extent|undefined} extent Extent.
 * @property {Array.<ol.Feature>|undefined} features Features.
 * @property {string|undefined} logo Logo.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {ol.source.State|undefined} state State.
 */

/**
 * @typedef {Object} ol.source.WMTSOptions
 * @property {Array.<ol.Attribution>|undefined} attributions Attributions.
 * @property {string|null|undefined} crossOrigin crossOrigin setting for image
 *     requests.
 * @property {ol.Extent|undefined} extent Extent.
 * @property {string|undefined} logo Logo.
 * @property {ol.tilegrid.WMTS} tileGrid Tile grid.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {ol.source.WMTSRequestEncoding|undefined} requestEncoding Request
 *     encoding.
 * @property {string} layer Layer.
 * @property {string} style Style.
 * @property {string|undefined} version WMTS version. Default to `1.0.0`.
 * @property {string|undefined} format Format.
 * @property {string} matrixSet Matrix set.
 * @property {Object|undefined} dimensions Dimensions.
 * @property {string|undefined} url URL.
 * @property {number|undefined} maxZoom Maximum zoom.
 * @property {ol.TileLoadFunctionType|undefined} tileLoadFunction Optional
 *     function to load a tile given a URL.
 * @property {Array.<string>|undefined} urls Urls.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.source.XYZOptions
 * @property {Array.<ol.Attribution>|undefined} attributions Attributions.
 * @property {null|string|undefined} crossOrigin Cross origin setting for image
 *     requests.
 * @property {ol.Extent|undefined} extent Extent.
 * @property {string|undefined} logo Logo.
 * @property {ol.proj.ProjectionLike} projection Projection.
 * @property {number|undefined} maxZoom Optional max zoom level. Default is `18`.
 * @property {number|undefined} minZoom Unsupported (TODO: remove this).
 * @property {ol.TileLoadFunctionType|undefined} tileLoadFunction Optional
 *     function to load a tile given a URL.
 * @property {ol.TileUrlFunctionType|undefined} tileUrlFunction Optional
 *     function to get tile URL given a tile coordinate and the projection.
 *     Required if url or urls are not provided.
 * @property {string|undefined} url URL template.  Must include `{x}`, `{y}`,
 *     and `{z}` placeholders.
 * @property {Array.<string>|undefined} urls An array of URL templates.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.tilegrid.TileGridOptions
 * @property {number|undefined} minZoom Minimum zoom.
 * @property {ol.Coordinate|undefined} origin Origin.
 * @property {Array.<ol.Coordinate>|undefined} origins Origins.
 * @property {!Array.<number>} resolutions Resolutions.
 * @property {ol.Size|undefined} tileSize Tile size.
 * @property {Array.<ol.Size>|undefined} tileSizes Tile sizes.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.tilegrid.WMTSOptions
 * @property {ol.Coordinate|undefined} origin Origin.
 * @property {Array.<ol.Coordinate>|undefined} origins Origins.
 * @property {!Array.<number>} resolutions Resolutions.
 * @property {!Array.<string>} matrixIds matrix IDs.
 * @property {ol.Size|undefined} tileSize Tile size.
 * @property {Array.<ol.Size>|undefined} tileSizes Tile sizes.
 * @todo stability experimental
 */

/**
 * @typedef {Object} ol.tilegrid.XYZOptions
 * @property {number} maxZoom Maximum zoom.
 * @todo stability experimental
 */
